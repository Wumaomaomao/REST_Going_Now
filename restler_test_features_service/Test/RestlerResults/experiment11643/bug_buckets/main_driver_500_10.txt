################################################################################
 main_driver_500

 Hash: main_driver_500_f37beded064b8d19a0b70b2783455ba6486b6e1f

 To attempt to reproduce this bug using restler, run restler with the command
 line option of --replay_log <path_to_this_log>.
 If an authentication token is required, you must also specify the token_refresh_cmd.

 This log may contain specific values for IDs or names that were generated
 during fuzzing, using the fuzzing dictionary. Such names will be re-played
 without modification. You must update the replay log manually with any changes
 required to execute the requests in your environment (for example, replacing
 pre-created account, subscription, or other resource IDs, as needed).
################################################################################

-> POST /products/fuzzstring/configurations/fuzzstring HTTP/1.1\r\nAccept: application/json\r\nHost: localhost:50100\r\n\r\n
! producer_timing_delay 0
! max_async_wait_time 20
PREVIOUS RESPONSE: 'HTTP/1.1 500 \r\nAccess-Control-Allow-Origin: *\r\nAccess-Control-Allow-Methods: POST, PUT, GET, OPTIONS, DELETE\r\nAccess-Control-Allow-Headers: x-requested-with\r\nAccess-Control-Max-Age: 3600\r\nContent-Type: text/html;charset=utf-8\r\nContent-Language: en\r\nContent-Length: 7532\r\nDate: Tue, 19 Nov 2024 06:44:45 GMT\r\nConnection: close\r\n\r\n<!DOCTYPE html><html><head><title>Apache Tomcat/8.5.11 - Error report</title><style type="text/css">h1 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;} h2 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;} h3 {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;} body {font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;} b {font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;} p {font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;} a {color:black;} a.name {color:black;} .line {height:1px;background-color:#525D76;border:none;}</style> </head><body><h1>HTTP Status 500 - org.javiermf.features.exceptions.ObjectNotFoundException: Object with id fuzzstring has not been found</h1><div class="line"></div><p><b>type</b> Exception report</p><p><b>message</b> <u>org.javiermf.features.exceptions.ObjectNotFoundException: Object with id fuzzstring has not been found</u></p><p><b>description</b> <u>The server encountered an internal error that prevented it from fulfilling this request.</u></p><p><b>exception</b></p><pre>javax.servlet.ServletException: org.javiermf.features.exceptions.ObjectNotFoundException: Object with id fuzzstring has not been found\n\torg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:489)\n\torg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\torg.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.javiermf.features.CORSFilter.doFilter(CORSFilter.java:29)\n</pre><p><b>root cause</b></p><pre>org.javiermf.features.exceptions.ObjectNotFoundException: Object with id fuzzstring has not been found\n\torg.javiermf.features.daos.ProductsDAO.findByName(ProductsDAO.java:41)\n\torg.javiermf.features.daos.ProductsDAO$$FastClassBySpringCGLIB$$94b988be.invoke(&lt;generated&gt;)\n\torg.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\torg.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:721)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)\n\torg.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:136)\n\torg.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)\n\torg.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656)\n\torg.javiermf.features.daos.ProductsDAO$$EnhancerBySpringCGLIB$$6ecfa819.findByName(&lt;generated&gt;)\n\torg.javiermf.features.services.ProductsService.findByName(ProductsService.java:41)\n\torg.javiermf.features.services.ProductsService$$FastClassBySpringCGLIB$$36810a9e.invoke(&lt;generated&gt;)\n\torg.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\torg.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)\n\torg.javiermf.features.services.ProductsService$$EnhancerBySpringCGLIB$$b07659b9.findByName(&lt;generated&gt;)\n\torg.javiermf.features.services.ProductsConfigurationsService.add(ProductsConfigurationsService.java:54)\n\torg.javiermf.features.services.ProductsConfigurationsService$$FastClassBySpringCGLIB$$d6e55de1.invoke(&lt;generated&gt;)\n\torg.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n\torg.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:652)\n\torg.javiermf.features.services.ProductsConfigurationsService$$EnhancerBySpringCGLIB$$7f23f562.add(&lt;generated&gt;)\n\torg.javiermf.features.services.rest.ProductsConfigurationResource.addConfiguration(ProductsConfigurationResource.java:41)\n\tjava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tjava.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tjava.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tjava.base/java.lang.reflect.Method.invoke(Method.java:566)\n\torg.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\n\torg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)\n\torg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)\n\torg.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$ResponseOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:160)\n\torg.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\n\torg.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\n\torg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\n\torg.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\n\torg.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\n\torg.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\n\torg.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\n\torg.glassfish.jersey.internal.Errors.process(Errors.java:315)\n\torg.glassfish.jersey.internal.Errors.process(Errors.java:297)\n\torg.glassfish.jersey.internal.Errors.process(Errors.java:267)\n\torg.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\n\torg.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\n\torg.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\n\torg.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\n\torg.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\n\torg.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\n\torg.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\n\torg.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)\n\torg.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n\torg.javiermf.features.CORSFilter.doFilter(CORSFilter.java:29)\n</pre><p><b>note</b> <u>The full stack trace of the root cause is available in the Apache Tomcat/8.5.11 logs.</u></p><hr class="line"><h3>Apache Tomcat/8.5.11</h3></body></html>'

